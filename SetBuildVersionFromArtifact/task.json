{
    "id": "7dacd1ce-8e0c-4441-b731-825ac9caf156",
    "name": "setbuildversionfromartifact",
    "friendlyName": "Set Build Version from an artifact",
    "description": "Reads a version from a version artifact (generated via SetVersionFromFile build task), extends this version by the current release information (revision) and sets it into the environment for other tasks to use.",
    "helpMarkDown": "This step makes it easier to use semver on your repositories: \n- You can save your version in your repositories and manage breaking changes on your regular workflow.\n- The version is managed in a simple text file (just containing the version)\n- This text file can be generated by previous steps\n- Every build still gets it's unique version by appending a unique build number (as suggested in the spec)\n- Will automatically upload the version as an artifact (will be automatically detected by the step later).",
    "category": "Utility",
    "author": "Matthias Dittrich",
    "version": {
        "Major": 0,
        "Minor": 1,
        "Patch": 10
    },
    "instanceNameFormat": "Read version from Artifact",
    "groups": [
        {
            "name": "variables",
            "displayName": "Variables",
            "isExpanded": false
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "releaseMode",
            "type": "pickList",
            "label": "Generation Mode",
            "defaultValue": "Release",
            "required": true,
            "helpMarkDown": "The mode for this environment or how the version number should be generated. Release creates the final version number while Release Candidate creates a version number with an -rc suffix.",
            "options": {
                "Release": "Release",
                "ReleaseCandidate": "Release Candidate (-rc suffix)"
            }
        },
        {
            "name": "extractReleaseRevision",
            "type": "string",
            "label": "Extract Release Revision Regex",
            "defaultValue": "Release-(.*)",
            "required": true,
            "helpMarkDown": "A regex to extract the release revision from the release name (.match(new RegExp(<field>))) needs to generate the match. This will be appended to the -rc suffix.",
            "visibleRule": "releaseMode = ReleaseCandidate"
        },
        {
            "name": "majorVersionVariableName",
            "type": "string",
            "label": "variable for the major part",
            "defaultValue": "ProjectVersion_Major",
            "required": false,
            "helpMarkDown": "We will save the version part in a Azure-DevOps variable as well as in an environment variable with the same name.",
            "groupName": "variables"
        },
        {
            "name": "minorVersionVariableName",
            "type": "string",
            "label": "variable for the minor part",
            "defaultValue": "ProjectVersion_Minor",
            "required": false,
            "helpMarkDown": "We will save the version part in a Azure-DevOps variable as well as in an environment variable with the same name.",
            "groupName": "variables"
        },
        {
            "name": "patchVersionVariableName",
            "type": "string",
            "label": "variable for the patch part",
            "defaultValue": "ProjectVersion_Patch",
            "required": false,
            "helpMarkDown": "We will save the version part in a Azure-DevOps variable as well as in an environment variable with the same name.",
            "groupName": "variables"
        },
        {
            "name": "specialVersionVariableName",
            "type": "string",
            "label": "variable for the special part",
            "defaultValue": "ProjectVersion_Special",
            "required": false,
            "helpMarkDown": "For example an '-alpha1' part. We will save the version part in a Azure-DevOps variable as well as in an environment variable with the same name.",
            "groupName": "variables"
        },
        {
            "name": "versionVariableName",
            "type": "string",
            "label": "variable for the full release version",
            "defaultValue": "ProjectVersion",
            "required": false,
            "helpMarkDown": "We will save the version part in a Azure-DevOps variable as well as in an environment variable with the same name.",
            "groupName": "variables"
        },
        {
            "name": "cdVersionVariableName",
            "type": "string",
            "label": "variable for the cd version for this build",
            "defaultValue": "ProjectVersion_CD",
            "required": false,
            "helpMarkDown": "Setup how the variable is called in which we save the cd version for this build (specially named version to indicate version released from CD). We will save the version part in a Azure-DevOps variable as well as in an environment variable with the same name. Use this version to release packages from a CD definition.",
            "groupName": "variables"
        },
        {
            "name": "artifactAlias",
            "type": "string",
            "label": "The alias of the artifact to use (if none is given we fallback to the primary artifact, or the first one or error out if none exists)",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Which artifact we should use to read the version from.",
            "groupName": "advanced"
        },
        {
            "name": "artifactName",
            "type": "string",
            "label": "How the artifact is named.",
            "defaultValue": "VersionInformation",
            "required": true,
            "helpMarkDown": "Usually this doesn't need to be changed. If changed change in the corresponding source build as well.",
            "groupName": "advanced"
        }
    ],
    "execution": {
        "Node": {
            "target": "fromartifact.js"
        }
    }
}